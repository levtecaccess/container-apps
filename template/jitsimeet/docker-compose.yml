# Jitsi Meet - Docker-Compose File
# Used to create the Jitsi Meet service suite
# Written by Levtec


version: '3'

services:

  # Frontend
  web:
    env_file:
      - variables.env
    image: jitsi/web
    ports:
      - '${HTTP_PORT}:8000'
      - '${HTTPS_PORT}:44300'
    volumes:
      - ${CONFIG}/web:/config
    environment:
      - ENABLE_AUTH
      - ENABLE_GUESTS
      - ENABLE_LETSENCRYPT
      - ENABLE_HTTP_REDIRECT
      - DISABLE_HTTPS
      - JICOFO_AUTH_USER
      - LETSENCRYPT_DOMAIN
      - LETSENCRYPT_EMAIL
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_BOSH_URL_BASE=http://xmpp.meet.jitsi:5280
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - TZ
    networks:
      meet.jitsi:

  # XMPP server
  prosody:
    env_file:
      - variables.env
    image: jitsi/prosody
    expose:
      - '5222'
      - '5347'
      - '5280'
    volumes:
      - ${CONFIG}/prosody:/config
    environment:
      - ENABLE_AUTH
      - ENABLE_GUESTS
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_MODULES
      - XMPP_MUC_MODULES
      - XMPP_INTERNAL_MUC_MODULES
      - JICOFO_COMPONENT_SECRET
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - JIGASI_XMPP_USER
      - JIGASI_XMPP_PASSWORD
      - TZ
    networks:
      meet.jitsi:
    aliases:
      - xmpp.meet.jitsi

    # Focus component
    jicofo:
    env_file:
      - variables.env
        image: jitsi/jicofo
        volumes:
            - ${CONFIG}/jicofo:/config
        environment:
            - ENABLE_AUTH
            - XMPP_DOMAIN
            - XMPP_AUTH_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_SERVER=xmpp.meet.jitsi
            - JICOFO_COMPONENT_SECRET
            - JICOFO_AUTH_USER
            - JICOFO_AUTH_PASSWORD
            - JVB_BREWERY_MUC
            - JIGASI_BREWERY_MUC
            - TZ
        depends_on:
            - prosody
        networks:
            meet.jitsi:

    # Video bridge
    jvb:
    env_file:
      - variables.env
        image: jitsi/jvb
        ports:
            - '${JVB_PORT}:${JVB_PORT}/udp'
            - '${JVB_TCP_PORT}:${JVB_TCP_PORT}'
        volumes:
            - ${CONFIG}/jvb:/config
        environment:
            - DOCKER_HOST_ADDRESS
            - XMPP_AUTH_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_SERVER=xmpp.meet.jitsi
            - JVB_AUTH_USER
            - JVB_AUTH_PASSWORD
            - JVB_BREWERY_MUC
            - JVB_PORT
            - JVB_TCP_HARVESTER_DISABLED
            - JVB_TCP_PORT
            - JVB_STUN_SERVERS
            - JVB_ENABLE_APIS
            - JICOFO_AUTH_USER
            - TZ
        depends_on:
            - prosody
        networks:
            meet.jitsi:

    # SIP gateway (audio)
    jigasi:
    env_file:
      - variables.env
        image: jitsi/jigasi
        ports:
            - '${JIGASI_PORT_MIN}-${JIGASI_PORT_MAX}:${JIGASI_PORT_MIN}-${JIGASI_PORT_MAX}/udp'
        volumes:
            - ${CONFIG}/jigasi:/config
        environment:
            - ENABLE_AUTH
            - XMPP_AUTH_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_SERVER=xmpp.meet.jitsi
            - XMPP_DOMAIN
            - JIGASI_SIP_URI
            - JIGASI_SIP_PASSWORD
            - JIGASI_SIP_SERVER
            - JIGASI_SIP_PORT
            - JIGASI_SIP_TRANSPORT
            - JIGASI_XMPP_USER
            - JIGASI_XMPP_PASSWORD
            - JIGASI_BREWERY_MUC
            - JIGASI_PORT_MIN
            - JIGASI_PORT_MAX
            - TZ
        depends_on:
            - prosody
        networks:
            meet.jitsi:

# Custom network so all services can communicate using a FQDN
networks:
    meet.jitsi:
